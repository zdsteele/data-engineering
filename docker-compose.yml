version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  jupyter:
    build:
      context: ./jupyter
      dockerfile: Dockerfile.jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./data:/home/jovyan/data
      - ./jupyter/notebooks:/home/jovyan/notebooks

#  kafka-producer:
#    build:
#      context: ./kafka-producer
#      dockerfile: Dockerfile.kafka_producer
#    container_name: kafka-producer
#    depends_on:
#      - kafka
#    volumes:
#      - ./kafka-producer/scripts:/app/scripts
#      - ./data:/app/data

  bronze-layer:
    build:
      context: ./kafka-producer
      dockerfile: Dockerfile.kafka_producer
    container_name: bronze-layer
    depends_on:
      - kafka
    volumes:
      - ./kafka-producer/scripts:/app/scripts
      - ./data:/app/data
    environment:
      KAFKA_BROKER: "kafka:9092"
      KAFKA_TOPIC: "bronze_topic"

  silver-layer:
    build:
      context: ./kafka-producer
      dockerfile: Dockerfile.kafka_producer
    container_name: silver-layer
    depends_on:
      - bronze-layer
    volumes:
      - ./kafka-producer/scripts:/app/scripts
      - ./data:/app/data
    command: python silver_layer.py
    environment:
      KAFKA_BROKER: "kafka:9092"
      BRONZE_TOPIC: "bronze_topic"
      SILVER_TOPIC: "silver_topic"

  gold-layer:
    build:
      context: ./kafka-producer
      dockerfile: Dockerfile.kafka_producer
    container_name: gold-layer
    depends_on:
      - silver-layer
    volumes:
      - ./kafka-producer/scripts:/app/scripts
      - ./data:/app/data
    command: python gold_layer.py
    environment:
      KAFKA_BROKER: "kafka:9092"
      SILVER_TOPIC: "silver_topic"
      GOLD_TOPIC: "gold_topic"

  flask-app:
    build:
      context: .
      dockerfile: flask_app/Dockerfile.flask
    container_name: flask-app
    depends_on:
      - gold-layer
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      - ./flask_app/templates:/app/templates
    environment:
      KAFKA_BROKER: "kafka:9092"
      GOLD_TOPIC: "gold_topic"


#  flask:
#    build:
#      context: .
#      dockerfile: flask_app/Dockerfile.flask
#    container_name: flask-app
#    ports:
#      - "5000:5000"
#    volumes:
#      - ./data:/app/data
#      - ./flask_app/templates:/app/templates



